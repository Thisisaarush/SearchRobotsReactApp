{"version":3,"sources":["components/Card.js","components/CardList.js","components/searchBox.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","App","onSearchChange","e","setState","searchField","target","value","state","fetch","then","response","json","users","filteredResult","this","filter","robot","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAaeA,EAVF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACxB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAG,+BAA0BJ,EAA1B,YAAwCK,IAAI,UACpD,6BAAKJ,IACL,6BAAKC,QCaII,G,MAjBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,qBAAKJ,UAAU,sBAAf,SAEII,EAAOC,KAAI,SAACC,EAAMC,GAChB,OACE,8BACE,cAAC,EAAD,CAAMV,GAAIO,EAAOG,GAAGV,GAAIC,KAAMM,EAAOG,GAAGT,KAAMC,MAAOK,EAAOG,GAAGR,iBCD9DS,G,MARG,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,aAClB,OACE,8BACE,uBAAOC,KAAK,SAASC,YAAY,gBAAgBC,SAAUH,QC+ClDI,E,kDA3Cb,aAAe,IAAD,8BACZ,gBAmBFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAnBrC,EAAKC,MAAQ,CACXhB,OAAQ,GACRa,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAG,GACJ,EAAKT,SAAS,CACZZ,OAAQqB,S,oBAUd,WAAW,IAAD,OAEFC,EAAiBC,KAAKP,MAAMhB,OAAOwB,QAAO,SAAAC,GAC9C,OAAOA,EAAM/B,KAAKgC,cAAcC,SAAS,EAAKX,MAAMH,YAAYa,kBAGlE,OACE,gCACE,sBAAK9B,UAAU,mBAAf,UACE,oBAAIH,GAAG,eAAP,4BACA,cAAC,EAAD,CAAWY,aAAckB,KAAKb,oBAEhC,cAAC,EAAD,CAAUV,OAASsB,W,GAvCTM,IAAMC,WCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fcc31937.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../css/Card.css';\r\n\r\nconst Card = ({ id, name, email }) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img src={`https://robohash.org/${id}?200x200`} alt='Robot' />\r\n      <h2>{name}</h2>\r\n      <h4>{email}</h4>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nimport '../css/CardList.css';\r\n\r\nconst CardList = ({ robots }) => {\r\n  return (\r\n    <div className='card-list-container'>\r\n      {\r\n        robots.map((user, i) => {\r\n          return (\r\n            <div>\r\n              <Card id={robots[i].id} name={robots[i].name} email={robots[i].email} />\r\n            </div>\r\n          );\r\n        })\r\n      }\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange }) => {\r\n  return (\r\n    <div>\r\n      <input type='search' placeholder='Search Robots' onChange={searchChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\nimport CardList from '../components/CardList';\nimport '../css/App.css';\nimport SearchBox from '../components/searchBox';\n\n\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchField: '',\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => {\n      return response.json();\n    })\n    .then(users => {\n      this.setState({\n        robots: users,\n      });\n    })\n  }\n\n  onSearchChange = (e) => {\n    this.setState({searchField: e.target.value});\n  }\n\n\n  render () {\n\n    const filteredResult = this.state.robots.filter(robot => {\n      return robot.name.toLowerCase().includes(this.state.searchField.toLowerCase());\n    })\n\n    return (\n      <div>\n        <div className='header-container'>\n          <h1 id='header-title'>Chitti Friends</h1>\n          <SearchBox searchChange={this.onSearchChange} />\n        </div>\n        <CardList robots={ filteredResult }/>\n      </div>\n    );\n  }\n  \n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css'\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}